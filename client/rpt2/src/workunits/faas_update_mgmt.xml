<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    <invokers>
        <invoker folderid="/explorer/txnmgmt/rpt" caption="Faas Updates" target="window" role="APPRAISER" permission="faasmgmtupdate.view" index="1000"/>
        
        <invoker type="formActions" caption="Close" action="_close" icon="images/cancel.png" mnemonic="c" index="-1"/>
        <invoker type="formActions" action="create" shortcut="ctrl N" immediate="true" caption="New" mnemonic="n" icon="images/doc-new.png" role="APPRAISER" permission="faasupdate.create" />
        <invoker type="formActions" action="open" shortcut="ctrl O" visibleWhen="#{selectedItem != null and selectedItem.objid != null}" immediate="true" caption="Open" mnemonic="o" icon="images/open.png" role="APPRAISER" permission="faasupdate.open" />
    </invokers>
    
    <code lang="groovy">
    <![CDATA[
    import com.rameses.rcp.annotations.* 
    import com.rameses.rcp.common.* 
    import com.rameses.osiris2.client.* 
    

    public class FAASUpdateMgmtController 
    {
        @Service('FAASUpdateService')
        def svc
        
        def selectedItem
        def filter = [:]
        
        def stateList = ['DRAFT', 'APPROVED']
        
         def getState() { filter.state }
         
         void setState( s ) {
            filter.state = s
            listHandler.load()
        }
        
        def listHandler = [
            getRows: { return 20 },
            getColumns: {
                return [
                    new Column(name:'dtfiled', caption:'Date Filed'),
                    new Column(name:'state', caption:'State'),
                    new Column(name:'tdno', caption:'TD No.'),
                    new Column(name:'pin', caption:'PIN'),
                    new Column(name:'taxpayername', caption:'Taxpayer'),
                    new Column(name:'filedby', caption:'Filed By'),
                    new Column(name:'approvedby', caption:'Approved By'),
                ]
            },
            fetchList: { params ->
                return svc.getList( filter )
            }
        ] as PageListModel
        
        def create() {
            InvokerUtil.lookupOpener('faasupdate.create', [:])
        }
        
        def open() {
            InvokerUtil.lookupOpener('faasupdate.open', [info: selectedItem])
        }
    }

    ]]>
    </code>
    
    <pages>
        <page template="etracs2.rpt.update.FAASUpdateListPage"/>
    </pages>
</workunit>



