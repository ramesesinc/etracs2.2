<workunit>
    <invokers>
        <invoker type="rptauction:nopas" action="init" caption="Notice of Publication and Auction Sale" target="window"/>
        <invoker type="rptauction_open:nopas" action="open" caption="Notice of Publication and Auction Sale" target="window"/>
        
        <invoker type="formActions" action="_close" caption="Cancel"  mnemonic="c" immediate="true" icon="images/cancel.png" />        
        <invoker type="formActions" action="save" caption="Save"  mnemonic="s"  icon="images/save.png" visibleWhen="#{mode=='init'}" />
        <invoker type="formActions" action="addPayment" caption="Add Payment "  mnemonic="r" visibleWhen="#{entity.docstate=='OPEN'}"/> 
        <invoker type="formActions" action="viewPayments" caption="View Payments "  mnemonic="v" visibleWhen="#{showViewPayment==true}"/> 
        <invoker type="formActions" action="preview" caption="Preview "  mnemonic="p"   visibleWhen="#{mode!='init'}" icon="images/doc-view.png"/> 
        
        <invoker type="previewActions"  action="back" caption="Back" icon="images/back.png" immediate="true" />
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;
import etracs2.groovy.CommonUtil

public class RPTAuctionNopas
{
    
    @Service('RPTAuctionService')
    def svc;
    
    @Service( 'ReportParameterService')
    def paramSvc
    
    @Service( 'DateService')
    def dtSvc
    
    def entity; 
    def mode
    def objid;
    def document
    
    public void init() {
        mode = 'init';
        entity = svc.open(objid)
        entity.doctype = document.code
        entity.doctypedesc = document.description
        entity.parentid = entity.objid
        entity.docstate = 'DRAFT'
    }
    
    public def open() {
        entity = svc.open(entity.objid)
        mode = 'saved'
        return "default";
    }
    
    public void save() {
        entity = svc.supersedeDoc( entity )
        mode = 'saved';
        MsgBox.alert("Successfully saved.    ")
    }
    
    def addPayment() {
        return InvokerUtil.lookupOpener('rptauction:addpayment', [entity:entity]);
    }
    
    def viewPayments() {
        return InvokerUtil.lookupOpener('rptauction:viewpayments', [payments:entity.payments]);
    }
    
    def preview() {
        report.viewReport()
        return "preview";
    }
    
    def back() {
        return "default";
    }
    
    boolean getShowViewPayment() {
        return (entity.payments.size() > 0)
    }
    
    def sdf = new java.text.SimpleDateFormat( "MMMMM dd, yyyy")
    def sdf1 = new java.text.SimpleDateFormat( "yyyy-MM-dd")
    
    def report = [
        getReportName : { return 'demandletters/noticeofpublicationandauctionsale' }, 
        getReportData : { 
            def reportdata = entity.clone()
            reportdata.dt1stpublication = sdf.format( sdf1.parse( reportdata.dt1stpublication ) )
            reportdata.dt2ndpublication = sdf.format( sdf1.parse( reportdata.dt2ndpublication ) )
            reportdata.expirydate = sdf.format(  reportdata.expirydate  )
            reportdata.auctiondate= sdf.format( sdf1.parse( reportdata.auctiondate ) )
            reportdata.parenttxndate = sdf.format( sdf1.parse( reportdata.parenttxndate ) )
            return reportdata 
        },
        getParameters : {
            return paramSvc.getStandardParameter( OsirisContext.env.USERNAME )
        }
    ]  as ServerReportModel
    
}

    
]]>
    </code>
    <pages>
        <page template="etracs2.rpt.report.rptauction.NOPASPage"/>
        <page name="preview" template="etracs2.common.PreviewPage" />
    </pages>
</workunit>
