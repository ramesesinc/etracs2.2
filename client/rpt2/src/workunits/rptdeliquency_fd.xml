<workunit>
    <invokers>
        <invoker type="rptdelinquency:fd" action="init" caption="RPT Delinquency (Final Demand)" target="window"/>
        <invoker type="rptdelinquency_open:fd" action="open" caption="RPT Delinquency (Final Demand)" target="window"/>
        
        <invoker type="formActions" action="_close" caption="Cancel"  mnemonic="c" immediate="true" icon="images/cancel.png" />        
        <invoker type="formActions" action="save" caption="Save"  mnemonic="s"  icon="images/save.png" visibleWhen="#{mode=='init'}" /> 
        <invoker type="formActions" action="preview" caption="Preview "  mnemonic="n"   visibleWhen="#{mode=='saved'}" icon="images/doc-view.png"/> 
        
        <invoker type="previewActions"  action="back" caption="Back" icon="images/back.png" immediate="true" />
        
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;
import etracs2.groovy.CommonUtil

public class RPTDelinquencyFD
{
    
    @Service('RPTDelinquencyService')
    def svc;
    
    @Service( 'ReportParameterService')
    def paramSvc

    def entity; 
    def mode
    def objid;
    def document
    
    public void init() {
        mode = 'init';
        entity = svc.open(objid)
        entity.doctype = document.code
        entity.doctypedesc = document.description
        entity.parentid = entity.objid
    }
    
    public def open() {
        entity = svc.open(entity.objid)
        mode ='save'
        return "default";
    }
    
    public void save() {
        svc.supersedeDoc( entity )
        mode = 'saved';
        MsgBox.alert("Successfully saved.    ")
    }
    
    def preview() {
        report.viewReport()
        return "preview";
    }
    
    def back() {
        return "default";
    }
    
    def buildAmountInWords() {
        entity.amountinwords = CommonUtil.wordFromNumber( entity.total) + ' PESOS ONLY'
        entity.amountinwords = entity.amountinwords.toUpperCase()
    }
    
    def report = [
        getReportName : { return 'demandletters/finaldemand' }, 
        getReportData : { 
            buildAmountInWords();
            return entity
        },
        getParameters : {
            return paramSvc.getStandardParameter( OsirisContext.env.USERNAME )
        }
    ]  as ServerReportModel
    
}

    
]]>
    </code>
    <pages>
        <page template="etracs2.rpt.report.rptdelinquency.DemandLetterPage"/>
        <page name="preview" template="etracs2.common.PreviewPage" />
    </pages>
</workunit>